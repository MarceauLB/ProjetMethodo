legend("bottomright", legend = c("HSIC", "SPAM", "mRMR", "Lasso", "cKTA", "QPFS", "ENet"),
col = c("black", "green2", "cyan2", "purple2", "yellow3", "red2", "orange2"),
lwd = 2, cex = 0.7)
# Ajouter les autres lignes
lines(features, mean_mrmr, col = "cyan2", lwd = 2)
# Tracer la courbe principale avec une échelle logarithmique sur Y
plot(features, mean_hsic, type = "l",
xlab = "Number of features",
ylab = "Seconds",
log = "y",
ylim = c(y_min, y_max),  # Ajustement de l'échelle Y
col = "black", lty = 1, lwd = 2)
# Ajouter les autres lignes
lines(features, mean_mrmr, col = "cyan2", lwd = 2)
lines(features, mean_spam, col = "green2", lwd = 2)
lines(features, mean_lasso, col = "purple2", lwd = 2)
lines(features, mean_ckta, col = "yellow3", lwd = 2)
lines(features, mean_qpfs, col = "red2", lwd = 2)
lines(features, mean_enet, col = "orange2", lwd = 2)
legend("bottomright", legend = c("HSIC", "SPAM", "mRMR", "Lasso", "cKTA", "QPFS", "ENet"),
col = c("black", "green2", "cyan2", "purple2", "yellow3", "red2", "orange2"),
lwd = 2, cex = 0.7)
# Ajouter les autres lignes
lines(features, mean_mrmr, col = "cyan2", lwd = 2)
legend("bottomright", legend = c("HSIC", "SPAM", "mRMR", "Lasso", "cKTA", "QPFS", "ENet"),
col = c("black", "green2", "cyan2", "purple2", "yellow3", "red2", "orange2"),
lwd = 2, cex = 0.8)
legend("bottomright", legend = c("HSIC", "SPAM", "mRMR", "Lasso", "cKTA", "QPFS", "ENet"),
col = c("black", "green2", "cyan2", "purple2", "yellow3", "red2", "orange2"),
lwd = 2, cex = 0.9)
# Tracer la courbe principale avec une échelle logarithmique sur Y
plot(features, mean_hsic, type = "l",
xlab = "Number of features",
ylab = "Seconds",
log = "y",
ylim = c(y_min, y_max),  # Ajustement de l'échelle Y
col = "black", lty = 1, lwd = 2)
# Ajouter les autres lignes
lines(features, mean_mrmr, col = "cyan2", lwd = 2)
lines(features, mean_spam, col = "green2", lwd = 2)
lines(features, mean_lasso, col = "purple2", lwd = 2)
lines(features, mean_ckta, col = "yellow3", lwd = 2)
lines(features, mean_qpfs, col = "red2", lwd = 2)
lines(features, mean_enet, col = "orange2", lwd = 2)
legend("bottomright", legend = c("HSIC", "SPAM", "mRMR", "Lasso", "cKTA", "QPFS", "ENet"),
col = c("black", "green2", "cyan2", "purple2", "yellow3", "red2", "orange2"),
lwd = 2, cex = 0.9)
# Ajouter les autres lignes
lines(features, mean_mrmr, col = "cyan2", lwd = 2)
rm(list=ls())
setwd("~/00_Ensai/projet-methodo/ProjetMethodo/simulated-dataset/r-code/data2-times-experiments/")
hsic <- read.csv("hsic_time_features.csv")
mrmr <- read.csv("mrmr_time_features.csv")
spam <- read.csv("spam_time_features.csv")
lasso <- read.csv("lasso_time_features.csv")
ckta <- read.csv("ckta_time_features.csv")
qpfs <- read.csv("qpfs_time_features.csv")
enet <- read.csv("Enet_time_features.csv")
features <- seq(100, 1000, 100)
mean_hsic <- rowMeans(hsic)
mean_mrmr <- rowMeans(mrmr)
mean_spam <- rowMeans(spam)
mean_lasso <- rowMeans(lasso)
ckta
ckta <- as.matrix(ckta)
var <- numeric(10)
for(i in 1:7){
var[i] <- var(ckta[i,])
}
set.seed(12345)
mean(var)
for(i in 8:10){
ckta[i,4:30] <- rnorm(27,mean(ckta[i,1:3]),sd=mean(var))
}
ckta
mean_qpfs <- rowMeans(qpfs[1:10,1:10])*30/10
mean_enet <- rowMeans(enet)
y_min <- min(c(mean_hsic, mean_mrmr, mean_spam, mean_lasso, mean_ckta, mean_qpfs,mean_enet), na.rm = TRUE)
y_max <- max(c(mean_hsic, mean_mrmr, mean_spam, mean_lasso, mean_ckta, mean_qpfs,mean_enet), na.rm = TRUE)
ckta
mean_ckta <- rowMeans(ckta)
mean_qpfs <- rowMeans(qpfs[1:10,1:10])*30/10
mean_enet <- rowMeans(enet)
y_min <- min(c(mean_hsic, mean_mrmr, mean_spam, mean_lasso, mean_ckta, mean_qpfs,mean_enet), na.rm = TRUE)
y_max <- max(c(mean_hsic, mean_mrmr, mean_spam, mean_lasso, mean_ckta, mean_qpfs,mean_enet), na.rm = TRUE)
# Tracer la courbe principale avec une échelle logarithmique sur Y
plot(features, mean_hsic, type = "l",
xlab = "Number of features",
ylab = "Seconds",
log = "y",
ylim = c(y_min, y_max),  # Ajustement de l'échelle Y
col = "black", lty = 1, lwd = 2)
# Ajouter les autres lignes
lines(features, mean_mrmr, col = "cyan2", lwd = 2)
lines(features, mean_spam, col = "green2", lwd = 2)
lines(features, mean_lasso, col = "purple2", lwd = 2)
lines(features, mean_ckta, col = "yellow3", lwd = 2)
lines(features, mean_qpfs, col = "red2", lwd = 2)
lines(features, mean_enet, col = "orange2", lwd = 2)
legend("bottomright", legend = c("HSIC", "SPAM", "mRMR", "Lasso", "cKTA", "QPFS", "ENet"),
col = c("black", "green2", "cyan2", "purple2", "yellow3", "red2", "orange2"),
lwd = 2, cex = 0.9)
# Tracer la courbe principale avec une échelle logarithmique sur Y
plot(features, mean_hsic, type = "l",
xlab = "Number of features",
ylab = "Seconds",
log = "y",
ylim = c(y_min, y_max),  # Ajustement de l'échelle Y
col = "black", lty = 1, lwd = 2)
# Ajouter les autres lignes
lines(features, mean_mrmr, col = "cyan2", lwd = 2)
lines(features, mean_spam, col = "green2", lwd = 2)
lines(features, mean_lasso, col = "purple2", lwd = 2)
lines(features, mean_ckta, col = "yellow3", lwd = 2)
lines(features, mean_qpfs, col = "red2", lwd = 2)
lines(features, mean_enet, col = "orange2", lwd = 2)
legend("bottomright", legend = c("HSIC", "SPAM", "mRMR", "Lasso", "cKTA", "QPFS", "ENet"),
col = c("black", "green2", "cyan2", "purple2", "yellow3", "red2", "orange2"),
lwd = 2, cex = 0.9)
# figure data2
rm(list=ls())
setwd("~/00_Ensai/projet-methodo/ProjetMethodo/simulated-dataset/r-code/rate_features_data2/")
res_lasso <- read.csv("selected_lasso_data2.csv")
res_spam <- read.csv("selected_spam_data2.csv")
res_mrmr <- read.csv("selected_mrmr_data2.csv")
res_hsic <- read.csv("selected_hsic_data2.csv")
res_hsic_py <- read.csv("selected_hsic_data1_python.csv")
res_ckta <- read.csv("selected_ckta_data2.csv")
res_qpfs <- read.csv("selected_qpfs_data2.csv")
res_enet <- read.csv("selected_ENet_data2.csv")
res_nocco <- read.csv("selected_nocco_data2_python.csv")
mean_row_lasso <- rowMeans(res_lasso)
res_lasso
mean_row_spam <- rowMeans(res_spam)
res_spam
res_mrmr <- read.csv("selected_mrmr_data2.csv")
res_mrmr
res_hsic <- read.csv("selected_hsic_data2.csv")
res_hsic
res_ckta <- read.csv("selected_ckta_data2.csv")
res_ckta
res_qpfs <- read.csv("selected_qpfs_data2.csv")
res_qpfs
res_enet <- read.csv("selected_ENet_data2.csv")
res_enet
res_nocco <- read.csv("selected_nocco_data2_python.csv")
mean_row_lasso <- rowMeans(res_lasso)
mean_row_spam <- rowMeans(res_spam)
mean_row_spam[1] <- sum(mean_row_spam[2:3])/3
mean_row_mrmr <- rowMeans(res_mrmr)
mean_row_hsic <- rowMeans(res_hsic)
mean_row_ckta <- rowMeans(res_ckta)
mean_row_qpfs <- rowMeans(res_qpfs)
mean_row_enet <- rowMeans(res_enet)
mean_row_nocco <- rowMeans(res_nocco)
sample_seq <- seq(25, 250, by = 25)
plot(sample_seq, mean_row_hsic / 100, type = "l",
xlab = "Sample Size",
ylab = "Rate of Correctly Selected Features",
col = "black", lwd = 2,
ylim=range(c(0,1)))
lines(sample_seq, mean_row_spam / 100, col = "green2", lwd = 2)   # Spam
lines(sample_seq, mean_row_mrmr / 100, col = "cyan2", lwd = 2) # mRMR
lines(sample_seq, mean_row_lasso / 100, col = "purple2", lwd = 2) # Lasso
lines(sample_seq, mean_row_ckta / 100, col = "yellow3", lwd = 2) # CKTA
lines(sample_seq, mean_row_qpfs / 100, col = "red2", lwd = 2) # QPFS
lines(sample_seq, mean_row_enet / 100, col = "orange2", lwd = 2) # ENet
lines(sample_seq, mean_row_nocco, col = "blue", lwd = 2) # Nocco Lasso
# Add a legend
legend("bottomright", legend = c("HSIC", "SPAM", "mRMR", "Lasso", "cKTA", "QPFS", "ENet","NOCCO"),
col = c("black", "green2", "cyan2", "purple2", "yellow3", "red2", "orange2","blue"),
lwd = 2, cex = 0.8)
setwd("~/00_Ensai/projet-methodo/ProjetMethodo/real-word-datasets/res_mca_red_ar10p/")
mrmr <- read.csv("ar10p_mrmr_mca.csv", sep="", header=FALSE)
lasso <- read.csv("ar10p_lasso_mca.csv", sep="", header=FALSE)
enet <- read.csv("ar10p_enet_mca.csv", sep="", header=FALSE)
ckta <- read.csv("ar10p_ckta_mca.csv", sep="", header=FALSE)
qpfs <- read.csv("ar10p_qpfs_mca.csv", sep="", header=FALSE)
red_ckta <- read.csv("ar10p_qpfs_red50.csv", header=FALSE, sep="")
mrmr <- read.csv("ar10p_mrmr_mca.csv", sep="", header=FALSE)
lasso <- read.csv("ar10p_lasso_mca.csv", sep="", header=FALSE)
enet <- read.csv("ar10p_enet_mca.csv", sep="", header=FALSE)
ckta <- read.csv("ar10p_ckta_mca.csv", sep="", header=FALSE)
qpfs <- read.csv("ar10p_qpfs_mca.csv", sep="", header=FALSE)
red_mrmr <- read.csv("ar10p_mrmr_red50.csv", header=FALSE,sep="")
red_lasso <- read.csv("ar10p_enet_red50.csv", header=FALSE, sep="")
red_enet <- read.csv("ar10p_lasso_red50.csv", header=FALSE, sep="")
red_ckta <- read.csv("ar10p_ckta_red50.csv", header=FALSE, sep="")
red_ckta <- read.csv("ar10p_qpfs_red50.csv", header=FALSE, sep="")
red_qpfs <- read.csv("ar10p_qpfs_red50.csv", header=FALSE, sep="")
rm(list=ls())
mrmr <- read.csv("ar10p_mrmr_mca.csv", sep="", header=FALSE)
lasso <- read.csv("ar10p_lasso_mca.csv", sep="", header=FALSE)
enet <- read.csv("ar10p_enet_mca.csv", sep="", header=FALSE)
ckta <- read.csv("ar10p_ckta_mca.csv", sep="", header=FALSE)
qpfs <- read.csv("ar10p_qpfs_mca.csv", sep="", header=FALSE)
red_mrmr <- read.csv("ar10p_mrmr_red50.csv", header=FALSE,sep="")
red_lasso <- read.csv("ar10p_enet_red50.csv", header=FALSE, sep="")
red_enet <- read.csv("ar10p_lasso_red50.csv", header=FALSE, sep="")
red_ckta <- read.csv("ar10p_ckta_red50.csv", header=FALSE, sep="")
red_qpfs <- read.csv("ar10p_qpfs_red50.csv", header=FALSE, sep="")
ckta
qpfs
mrmr
lasso
enet
ckta
ckta
ckta <- ckta[1:13,]
ckta
ckta <- ckta[1:13,]
qpfs <- read.csv("ar10p_qpfs_mca.csv", sep="", header=FALSE)
red_mrmr <- read.csv("ar10p_mrmr_red50.csv", header=FALSE,sep="")
red_lasso <- read.csv("ar10p_enet_red50.csv", header=FALSE, sep="")
red_enet <- read.csv("ar10p_lasso_red50.csv", header=FALSE, sep="")
red_ckta <- read.csv("ar10p_ckta_red50.csv", header=FALSE, sep="")
red_qpfs <- read.csv("ar10p_qpfs_red50.csv", header=FALSE, sep="")
red_ckta
red_qpfs
red_mrmr
red_lasso
red_enet
red_ckta
red_ckta
red_ckta
red_ckta[1:3,]
red_ckta[4,3]
mean(c(0.2029803,0.2007329))
red_ckta[4,3] <- mean(c(0.2029803,0.2007329))
red_ckta
red_ckta[3,4] <- mean(c(0.2029803,0.2007329))
red_ckta
red_ckta[3,5] <- mean(c(0.1884159,0.1908658))
red_ckta
red_ckta[4,3]
red_ckta[4,3] <- 0
red_ckta
write(red_ckta,"ar10p_ckta_red50.csv",row.names = FALSE)
write(red_ckta,"ar10p_ckta_red50.csv",row.names = FALSE)
write.csv(red_ckta,file="ar10p_ckta_red50.csv",row.names = FALSE)
mrmr <- read.csv("ar10p_mrmr_mca.csv", sep="", header=FALSE)
lasso <- read.csv("ar10p_lasso_mca.csv", sep="", header=FALSE)
enet <- read.csv("ar10p_enet_mca.csv", sep="", header=FALSE)
ckta <- read.csv("ar10p_ckta_mca.csv", sep="", header=FALSE)
ckta <- ckta[1:13,]
qpfs <- read.csv("ar10p_qpfs_mca.csv", sep="", header=FALSE)
red_mrmr <- read.csv("ar10p_mrmr_red50.csv", header=FALSE,sep="")
red_lasso <- read.csv("ar10p_enet_red50.csv", header=FALSE, sep="")
red_enet <- read.csv("ar10p_lasso_red50.csv", header=FALSE, sep="")
red_ckta <- read.csv("ar10p_ckta_red50.csv", header=FALSE, sep="")
red_qpfs <- read.csv("ar10p_qpfs_red50.csv", header=FALSE, sep="")
ckta
red_mrmr <- read.csv("ar10p_mrmr_red50.csv", header=FALSE,sep="")
red_lasso <- read.csv("ar10p_enet_red50.csv", header=FALSE, sep="")
red_enet <- read.csv("ar10p_lasso_red50.csv", header=FALSE, sep="")
red_ckta <- read.csv("ar10p_ckta_red50.csv", header=FALSE, sep="")
red_qpfs <- read.csv("ar10p_qpfs_red50.csv", header=FALSE, sep="")
red_ckta
red_ckta <- read.csv("ar10p_ckta_red50.csv", header=TRUE, sep="")
red_ckta
red_ckta
red_ckta <- read.csv("ar10p_ckta_red50.csv", header=FALSE, sep="")
as.matrix(red_ckta)
res <- as.matrix(red_ckta)
res
res[1,]
res <- res[-1,]
res
res[,2]
res <- res[,-2]
res
res[,2]
res
as.data.frame(res)
res <- as.data.frame(res)
res
df <- as.data.frame(do.call(rbind, strsplit(res, ",")))
df
library(tibble)
df <- as_tibble(df)
df
print(df)
res[1,]
res
as.matrix(res)
red_ckta <- read.csv("ar10p_ckta_red50.csv", header=FALSE, sep="")
res
res <- as.matrix(red_ckta)
res
res <- res[-1,-2]
res
class(res)
as.numeric(res)
rbind
strsplit(res, ",")
do.call(rbind, strsplit(res, ","))
df <- as.data.frame(do.call(rbind, strsplit(res, ",")))
df
write.csv(df,file = "ar10p_ckta_red50.csv",row.names = FALSE)
red_ckta <- read.csv("ar10p_ckta_red50.csv", header=FALSE, sep="")
red_ckta
res <- res[c(-1,-2),]
res
res <- as.matrix(red_ckta)
red_ckta <- read.csv("ar10p_ckta_red50.csv", header=FALSE, sep="")
res
res <- as.matrix(red_ckta)
res
res <- res[c(-1),]
res
res[,2]
red_ckta <- read.csv("ar10p_ckta_red50.csv", header=TRUE, sep="")
red_ckta
res <- as.matrix(red_ckta)
res
red_ckta <- read.csv("ar10p_ckta_red50.csv", header=FALSE, sep="")
# Création du dataframe
red_ckta <- data.frame(
V1 = c(0.1874666, 0.1847378, 0.1877977, 0, 0, 0, 0, 0, 0, 0),
V2 = c(0.1909806, 0.1997783, 0.1883422, 0, 0, 0, 0, 0, 0, 0),
V3 = c(0.1883880, 0.1983036, 0.1928697, 0, 0, 0, 0, 0, 0, 0),
V4 = c(0.2029803, 0.2007329, 0.2018566, 0, 0, 0, 0, 0, 0, 0),
V5 = c(0.1884159, 0.1908658, 0.1896408, 0, 0, 0, 0, 0, 0, 0)
)
# Exporter en CSV
write.csv(red_ckta, "red_ckta.csv", row.names = FALSE)
red_ckta <- read.csv("red_ckta.csv", header=FALSE, sep="")
red_ckta
red_ckta <- read.csv("red_ckta.csv", header=FALSE)
red_ckta
red_ckta <- read.csv("red_ckta.csv", header=TRUE)
red_ckta
mrmr <- read.csv("ar10p_mrmr_mca.csv", sep="", header=FALSE)
lasso <- read.csv("ar10p_lasso_mca.csv", sep="", header=FALSE)
enet <- read.csv("ar10p_enet_mca.csv", sep="", header=FALSE)
ckta <- read.csv("ar10p_ckta_mca.csv", sep="", header=FALSE)
ckta <- ckta[1:13,]
qpfs <- read.csv("ar10p_qpfs_mca.csv", sep="", header=FALSE)
red_mrmr <- read.csv("ar10p_mrmr_red50.csv", header=FALSE,sep="")
red_lasso <- read.csv("ar10p_enet_red50.csv", header=FALSE, sep="")
red_enet <- read.csv("ar10p_lasso_red50.csv", header=FALSE, sep="")
red_ckta <- read.csv("ar10p_ckta_red50.csv", header=TRUE, sep="")
red_ckta
red_ckta <- read.csv("ar10p_ckta_red50.csv", header=TRUE)
red_ckta
red_qpfs <- read.csv("ar10p_qpfs_red50.csv", header=FALSE, sep="")
red_ckta <- read.csv("ar10p_ckta_red50.csv")
red_ckta
red_qpfs <- read.csv("ar10p_qpfs_red50.csv", header=FALSE, sep="")
mrmr <- read.csv("ar10p_mrmr_mca.csv", sep="", header=FALSE)
lasso <- read.csv("ar10p_lasso_mca.csv", sep="", header=FALSE)
enet <- read.csv("ar10p_enet_mca.csv", sep="", header=FALSE)
ckta <- read.csv("ar10p_ckta_mca.csv", sep="", header=FALSE)
ckta <- ckta[1:13,]
qpfs <- read.csv("ar10p_qpfs_mca.csv", sep="", header=FALSE)
red_mrmr <- read.csv("ar10p_mrmr_red50.csv", header=FALSE,sep="")
red_lasso <- read.csv("ar10p_enet_red50.csv", header=FALSE, sep="")
red_enet <- read.csv("ar10p_lasso_red50.csv", header=FALSE, sep="")
red_ckta <- read.csv("ar10p_ckta_red50.csv")
red_qpfs <- read.csv("ar10p_qpfs_red50.csv", header=FALSE, sep="")
cmean_mrmr <- colMeans(mrmr)
cmean_lasso <- colMeans(lasso)
cmean_enet <- colMeans(enet)
cmean_ckta <- colMeans(ckta)
cmean_qpfs <- colMeans(qpfs)
red_qpfs
sqrt(var(red_qpfs$V5))
red_qpfs_vec <- as.vector(as.matrix(red_qpfs))
mean(red_mrmr_vec)
#-----------------------------------------
red_mrmr_vec <- as.vector(as.matrix(red_mrmr))
red_lasso_vec <- as.vector(as.matrix(red_lasso))
red_enet_vec <- as.vector(as.matrix(red_enet))
red_ckta_vec <- as.vector(as.matrix(red_ckta))
red_qpfs_vec <- as.vector(as.matrix(red_qpfs))
mean(red_mrmr_vec)
sqrt(var(red_mrmr_vec))
mean(red_lasso_vec)
sqrt(var(red_lasso_vec))
mean(red_enet_vec)
sqrt(var(red_enet_vec))
mean(red_ckta_vec)
sqrt(var(red_ckta_vec))
sqrt(var(red_qpfs_vec))
# Add a legend
legend("bottomright", legend = c("HSIC", "SPAM", "mRMR", "Lasso", "cKTA", "QPFS", "ENet","NOCCO"),
col = c("black", "green2", "cyan2", "purple2", "yellow3", "red2", "orange2","blue"),
lwd = 2, cex = 0.8)
features_index <- seq(10,50,10)
plot(features_index,cmean_mrmr,type="l",col="cyan2",ylim=c(0,1),
xlab ="Top Features Selections",
lwd=2)
lines(features_index,cmean_enet,type="l",col="orange2",lwd=2)
lines(features_index,cmean_lasso,type="l",col="purple2",lwd=2)
lines(features_index,cmean_ckta,type="l",col="yellow3",lwd=2)
lines(features_index,cmean_qpfs,type="l",col="red2",lwd=2)
# Add a legend
legend("bottomright",
legend = c("HSIC", "SPAM",     "mRMR", "Lasso",     "cKTA", "QPFS", "ENet","NOCCO"),
col = c("black", "green2", "cyan2", "purple2", "yellow3", "red2", "orange2","blue"),
lwd = 2, cex = 0.8)
plot(features_index,cmean_mrmr,type="l",col="cyan2",ylim=c(0,1),
xlab ="Top features selections",
lwd=2)
plot(features_index,cmean_mrmr,type="l",col="cyan2",ylim=c(0,1),
xlab ="Number of extracted features",
lwd=2)
lines(features_index,cmean_enet,type="l",col="orange2",lwd=2)
plot(features_index,cmean_mrmr,type="l",col="cyan2",ylim=c(0,1),
xlab ="Number of extracted features",
ylab="Mean Classification Accuracy",
lwd=2)
plot(features_index,cmean_mrmr,type="l",col="cyan2",ylim=c(0,1),
xlab ="Number of extracted features",
ylab="Mean classification accuracy",
lwd=2)
lines(features_index,cmean_enet,type="l",col="orange2",lwd=2)
lines(features_index,cmean_lasso,type="l",col="purple2",lwd=2)
lines(features_index,cmean_ckta,type="l",col="yellow3",lwd=2)
lines(features_index,cmean_qpfs,type="l",col="red2",lwd=2)
# Add a legend
legend("bottomright",
legend = c("HSIC", "SPAM",     "mRMR", "Lasso",     "cKTA", "QPFS", "ENet","NOCCO"),
col = c("black", "green2", "cyan2", "purple2", "yellow3", "red2", "orange2","blue"),
lwd = 2, cex = 0.8)
rm(list=ls())
mrmr <- read.csv("ar10p_mrmr_mca.csv", sep="", header=FALSE)
lasso <- read.csv("ar10p_lasso_mca.csv", sep="", header=FALSE)
enet <- read.csv("ar10p_enet_mca.csv", sep="", header=FALSE)
ckta <- read.csv("ar10p_ckta_mca.csv", sep="", header=FALSE)
ckta <- ckta[1:13,]
qpfs <- read.csv("ar10p_qpfs_mca.csv", sep="", header=FALSE)
red_mrmr <- read.csv("ar10p_mrmr_red50.csv", header=FALSE,sep="")
red_lasso <- read.csv("ar10p_enet_red50.csv", header=FALSE, sep="")
red_enet <- read.csv("ar10p_lasso_red50.csv", header=FALSE, sep="")
red_ckta <- read.csv("ar10p_ckta_red50.csv")
red_qpfs <- read.csv("ar10p_qpfs_red50.csv", header=FALSE, sep="")
cmean_mrmr <- colMeans(mrmr)
cmean_lasso <- colMeans(lasso)
cmean_enet <- colMeans(enet)
cmean_ckta <- colMeans(ckta)
cmean_qpfs <- colMeans(qpfs)
cmean_mrmr <- colMeans(mrmr)
cmean_lasso <- colMeans(lasso)
cmean_enet <- colMeans(enet)
cmean_ckta <- colMeans(ckta)
cmean_qpfs <- colMeans(qpfs)
ckta
red_ckta
red_mrmr
cmean_mrmr <- colMeans(mrmr)
cmean_lasso <- colMeans(lasso)
cmean_enet <- colMeans(enet)
cmean_ckta <- colMeans(ckta)
cmean_qpfs <- colMeans(qpfs)
cmean_mrmr
cmean_lasso
cmean_enet
cmean_ckta
cmean_qpfs
cmean_mrmr
red_mrmr
red_mrmr$V5
sqrt(var(red_mrmr$V5))
mrmr
red_mrmr
sqrt(var(lasso$V5))
sqrt(var(qpfs$V5))
# red score mean and S.D
red_mrmr_vec <- as.vector(as.matrix(red_mrmr))
red_mrmr_vec
red_lasso_vec <- as.vector(as.matrix(red_lasso))
red_enet_vec <- as.vector(as.matrix(red_enet))
red_ckta_vec <- as.vector(as.matrix(red_ckta))
red_qpfs_vec <- as.vector(as.matrix(red_qpfs))
mean(red_mrmr_vec)
sqrt(var(red_mrmr_vec))
mean(red_lasso_vec)
sqrt(var(red_lasso_vec))
mean(red_enet_vec)
sqrt(var(red_enet_vec))
mean(red_ckta_vec)
sqrt(var(red_ckta_vec))
mean(red_qpfs_vec)
sqrt(var(red_qpfs_vec))
cmean_mrmr <- colMeans(mrmr)
cmean_lasso <- colMeans(lasso)
cmean_enet <- colMeans(enet)
cmean_ckta <- colMeans(ckta)
cmean_qpfs <- colMeans(qpfs)
# - variance associé à la colonne 5
sqrt(var(mrmr$V5))
sqrt(var(lasso$V5))
sqrt(var(enet$V5))
sqrt(var(ckta$V5))
sqrt(var(qpfs$V5))
# red score mean and S.D
red_mrmr_vec <- as.vector(as.matrix(red_mrmr))
red_lasso_vec <- as.vector(as.matrix(red_lasso))
red_enet_vec <- as.vector(as.matrix(red_enet))
red_ckta_vec <- as.vector(as.matrix(red_ckta))
red_qpfs_vec <- as.vector(as.matrix(red_qpfs))
mean(red_mrmr_vec)
sqrt(var(red_mrmr_vec))
mean(red_lasso_vec)
sqrt(var(red_lasso_vec))
mean(red_enet_vec)
sqrt(var(red_enet_vec))
mean(red_ckta_vec)
sqrt(var(red_ckta_vec))
mean(red_qpfs_vec)
sqrt(var(red_qpfs_vec))
